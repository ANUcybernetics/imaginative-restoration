import type { ReadonlyVec } from "@thi.ng/vectors";
import type { IDistance, Metric } from "./api.js";
export declare class Eucledian<T> implements IDistance<T> {
    readonly metric: Metric<T>;
    constructor(metric: Metric<T>);
    to(x: number): number;
    from(x: number): number;
}
/**
 * Eucledian distance metric for n-D vectors.
 */
export declare const EUCLEDIAN: Eucledian<ReadonlyVec>;
/**
 * Eucledian distance metric for numbers.
 */
export declare const EUCLEDIAN1: Eucledian<number>;
/**
 * Eucledian distance metric for 2d vectors.
 */
export declare const EUCLEDIAN2: Eucledian<ReadonlyVec>;
/**
 * Eucledian distance metric for 3d vectors.
 */
export declare const EUCLEDIAN3: Eucledian<ReadonlyVec>;
//# sourceMappingURL=eucledian.d.ts.map